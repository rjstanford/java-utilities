# Every time a PR is merged into HEAD, release a new library using semantic versioning

name: Pull Request Merge

on:
  pull_request:
    types:
      - closed

jobs:

  Publish:

    if: github.event.pull_request.merged == 'true'

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:

    - run: echo Event is ${{ github.event }}
    - run: echo PR Target is ${{ github.event.pull_request_target }}
    - run: echo Merged status is ${{ github.event.pull_request_target.merged }}

    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Create Tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Test
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: test

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

    - name: Publish to GitHub Packages
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: publish -Pversion=${{ steps.tag_version.outputs.new_version }}
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
